{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../util\";\nconst initialState = {\n  token: null,\n  userId: null,\n  error: null,\n  loading: false,\n  authRedirectPath: \"/\"\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.idToken,\n    userId: action.userId,\n    error: null,\n    loading: false\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n    userId: null\n  });\n};\n\nconst setAuthRedirectPath = (state, action) => {\n  return updateObject(state, {\n    authRedirectPath: action.path\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\n      return setAuthRedirectPath(state, action);\n\n    case actionTypes.HYDRATE:\n      // Attention! This will overwrite client state! Real apps should use proper reconciliation.\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/tomide/Project/No-Bull/Dashboard/redux/reducers/auth.js"],"names":["actionTypes","updateObject","initialState","token","userId","error","loading","authRedirectPath","authStart","state","action","authSuccess","idToken","authFail","authLogout","setAuthRedirectPath","path","reducer","type","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","HYDRATE","payload"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,SAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,MAAM,EAAE,IAFW;AAGnBC,EAAAA,KAAK,EAAE,IAHY;AAInBC,EAAAA,OAAO,EAAE,KAJU;AAKnBC,EAAAA,gBAAgB,EAAE;AALC,CAArB;;AAQA,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AAAEJ,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,OAAO,EAAE;AAAxB,GAAR,CAAnB;AACD,CAFD;;AAIA,MAAMK,WAAW,GAAG,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACrC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AACzBN,IAAAA,KAAK,EAAEO,MAAM,CAACE,OADW;AAEzBR,IAAAA,MAAM,EAAEM,MAAM,CAACN,MAFU;AAGzBC,IAAAA,KAAK,EAAE,IAHkB;AAIzBC,IAAAA,OAAO,EAAE;AAJgB,GAAR,CAAnB;AAMD,CAPD;;AASA,MAAMO,QAAQ,GAAG,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAClC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AACzBJ,IAAAA,KAAK,EAAEK,MAAM,CAACL,KADW;AAEzBC,IAAAA,OAAO,EAAE;AAFgB,GAAR,CAAnB;AAID,CALD;;AAOA,MAAMQ,UAAU,GAAG,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACpC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AAAEN,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,MAAM,EAAE;AAAvB,GAAR,CAAnB;AACD,CAFD;;AAIA,MAAMW,mBAAmB,GAAG,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC7C,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AAAEF,IAAAA,gBAAgB,EAAEG,MAAM,CAACM;AAA3B,GAAR,CAAnB;AACD,CAFD;;AAIA,MAAMC,OAAO,GAAG,CAACR,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACQ,IAAf;AACE,SAAKlB,WAAW,CAACmB,UAAjB;AACE,aAAOX,SAAS,CAACC,KAAD,EAAQC,MAAR,CAAhB;;AACF,SAAKV,WAAW,CAACoB,YAAjB;AACE,aAAOT,WAAW,CAACF,KAAD,EAAQC,MAAR,CAAlB;;AACF,SAAKV,WAAW,CAACqB,SAAjB;AACE,aAAOR,QAAQ,CAACJ,KAAD,EAAQC,MAAR,CAAf;;AACF,SAAKV,WAAW,CAACsB,WAAjB;AACE,aAAOR,UAAU,CAACL,KAAD,EAAQC,MAAR,CAAjB;;AACF,SAAKV,WAAW,CAACuB,sBAAjB;AACE,aAAOR,mBAAmB,CAACN,KAAD,EAAQC,MAAR,CAA1B;;AACF,SAAKV,WAAW,CAACwB,OAAjB;AACE;AACA,6CAAYf,KAAZ,GAAsBC,MAAM,CAACe,OAA7B;;AACF;AACE,aAAOhB,KAAP;AAfJ;AAiBD,CAlBD;;AAoBA,eAAeQ,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../util\";\n\nconst initialState = {\n  token: null,\n  userId: null,\n  error: null,\n  loading: false,\n  authRedirectPath: \"/\",\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.idToken,\n    userId: action.userId,\n    error: null,\n    loading: false,\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false,\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, { token: null, userId: null });\n};\n\nconst setAuthRedirectPath = (state, action) => {\n  return updateObject(state, { authRedirectPath: action.path });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\n      return setAuthRedirectPath(state, action);\n    case actionTypes.HYDRATE:\n      // Attention! This will overwrite client state! Real apps should use proper reconciliation.\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}