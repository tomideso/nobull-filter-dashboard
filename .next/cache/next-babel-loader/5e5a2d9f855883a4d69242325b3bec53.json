{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../util\";\nvar initialState = {\n  error: null,\n  loading: false,\n  message: null,\n  regRedirectPath: null,\n  regData: {}\n};\n\nvar regStart = function regStart(state, action) {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nvar saveRegData = function saveRegData(state, action) {\n  var regData = {\n    email: action.email,\n    practiceWebUrl: action.practiceWebUrl,\n    practiceName: action.practiceName,\n    firstname: action.firstname,\n    lastname: action.lastname,\n    title: action.title\n  };\n  return updateObject(state, {\n    regData: regData\n  });\n};\n\nvar regSuccess = function regSuccess(state, action) {\n  return updateObject(state, {\n    error: null,\n    loading: false,\n    message: action.message,\n    regRedirectPath: \"/confirmation/email\"\n  });\n};\n\nvar regReset = function regReset(state, action) {\n  console.log(\"reseting this\");\n  return updateObject(state, {\n    error: null,\n    loading: false,\n    message: null,\n    regRedirectPath: null\n  });\n};\n\nvar regFail = function regFail(state, action) {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.REG_START:\n      return regStart(state, action);\n\n    case actionTypes.REG_SUCCESS:\n      return regSuccess(state, action);\n\n    case actionTypes.SAVE_REG_DATA:\n      return saveRegData(state, action);\n\n    case actionTypes.SET_REG_REDIRECT_PATH:\n      return setRegRedirectPath(state, action);\n\n    case actionTypes.REG_FAILURE:\n      return regFail(state, action);\n\n    case actionTypes.REG_RESET:\n      return regReset(state, action);\n\n    default:\n      return state;\n  }\n};\n\nvar setRegRedirectPath = function setRegRedirectPath(state, action) {\n  return updateObject(state, {\n    regRedirectPath: action.path\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/tomide/Project/No-Bull/Dashboard/redux/reducers/reg.js"],"names":["actionTypes","updateObject","initialState","error","loading","message","regRedirectPath","regData","regStart","state","action","saveRegData","email","practiceWebUrl","practiceName","firstname","lastname","title","regSuccess","regReset","console","log","regFail","reducer","type","REG_START","REG_SUCCESS","SAVE_REG_DATA","SET_REG_REDIRECT_PATH","setRegRedirectPath","REG_FAILURE","REG_RESET","path"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../util\";\n\nconst initialState = {\n  error: null,\n  loading: false,\n  message: null,\n  regRedirectPath: null,\n  regData: {},\n};\n\nconst regStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true });\n};\n\nconst saveRegData = (state, action) => {\n  const regData = {\n    email: action.email,\n    practiceWebUrl: action.practiceWebUrl,\n    practiceName: action.practiceName,\n    firstname: action.firstname,\n    lastname: action.lastname,\n    title: action.title,\n  };\n  return updateObject(state, { regData });\n};\n\nconst regSuccess = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: false,\n    message: action.message,\n    regRedirectPath: \"/confirmation/email\",\n  });\n};\n\nconst regReset = (state, action) => {\n  console.log(\"reseting this\");\n  return updateObject(state, {\n    error: null,\n    loading: false,\n    message: null,\n    regRedirectPath: null,\n  });\n};\n\nconst regFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false,\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.REG_START:\n      return regStart(state, action);\n    case actionTypes.REG_SUCCESS:\n      return regSuccess(state, action);\n    case actionTypes.SAVE_REG_DATA:\n      return saveRegData(state, action);\n    case actionTypes.SET_REG_REDIRECT_PATH:\n      return setRegRedirectPath(state, action);\n    case actionTypes.REG_FAILURE:\n      return regFail(state, action);\n    case actionTypes.REG_RESET:\n      return regReset(state, action);\n    default:\n      return state;\n  }\n};\n\nconst setRegRedirectPath = (state, action) => {\n  return updateObject(state, { regRedirectPath: action.path });\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}